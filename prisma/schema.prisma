// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Memecoin {
  id          String   @id @default(cuid())
  name        String   @unique
  symbol      String
  description String?
  logoUrl     String
  createdAt   DateTime @default(now())

  // Supply actuelle des tokens
  supply Int @default(0)

  // Réserve de liquidité actuelle en ZTH
  liquidity Float @default(0)

  Transaction Transaction[]

  UserHolding UserHolding[]
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  // Solde en ZTH de l'utilisateur
  zthBalance Float @default(100)

  Transaction Transaction[]

  UserHolding UserHolding[]
}

model Transaction {
  id         String   @id @default(cuid()) // ID unique pour chaque transaction
  memecoin   Memecoin @relation(fields: [memecoinId], references: [id]) // Relation avec Memecoin
  memecoinId String // Champ pour la clé étrangère vers Memecoin
  user       User     @relation(fields: [userId], references: [id]) // Relation avec User
  userId     String // Clé étrangère liée à User
  type       String // Type de transaction : "buy" ou "sell"
  quantity   Int // Quantité de tokens échangés
  price      Float // Prix total de la transaction
  createdAt  DateTime @default(now()) // Timestamp de création
}

model UserHolding {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id]) // Relation avec User
  userId     String
  memecoin   Memecoin @relation(fields: [memecoinId], references: [id]) // Relation avec Memecoin
  memecoinId String
  quantity   Int // Quantité possédée

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
